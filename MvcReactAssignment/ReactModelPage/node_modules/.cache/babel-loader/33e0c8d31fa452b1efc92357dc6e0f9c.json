{"ast":null,"code":"export function updateCityNameAction(city) {\n  return {\n    type: \"UPDATE_CITY\",\n    selectedLocation: city\n  };\n}\nexport function mapStateToProps(state) {\n  return { ...state,\n    selectedLocation: state.selectedLocation\n  };\n}\nexport function mapDispatchToProps(dispatch) {\n  return {\n    changeCityName: function (selectedLocation) {\n      dispatch(updateCityNameAction(selectedLocation));\n    }\n  };\n}\n\nchangeEntityFlag = (flag, entity, type, id) => {\n  if (type === \"Version\") {\n    let sel_ver = {};\n\n    for (let i = 0; i < this.state.versions.length; i++) {\n      if (this.state.versions[i].versionName === entity) {\n        sel_ver = this.state.versions[i];\n        break;\n      }\n    }\n\n    this.setState({ ...this.state,\n      selectedVersion: sel_ver,\n      locationPopUpVisible: false,\n      versionPopUpVisible: flag,\n      id: 0\n    });\n  } else {\n    this.setState({ ...this.state,\n      selectedLocation: entity,\n      locationPopUpVisible: flag,\n      versionPopUpVisible: false,\n      id: 1\n    });\n  }\n};","map":{"version":3,"sources":["D:/reactmvc/MvcReactAssignment/ReactModelPage/src/Actions/cityAction.js"],"names":["updateCityNameAction","city","type","selectedLocation","mapStateToProps","state","mapDispatchToProps","dispatch","changeCityName","changeEntityFlag","flag","entity","id","sel_ver","i","versions","length","versionName","setState","selectedVersion","locationPopUpVisible","versionPopUpVisible"],"mappings":"AAAA,OAAO,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,gBAAgB,EAAEF;AAFf,GAAP;AAIH;AAED,OAAO,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AACnC,SAAO,EACH,GAAGA,KADA;AAEHF,IAAAA,gBAAgB,EAAEE,KAAK,CAACF;AAFrB,GAAP;AAIH;AAED,OAAO,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;AACzC,SAAO;AACHC,IAAAA,cAAc,EAAE,UAAUL,gBAAV,EAA4B;AACxCI,MAAAA,QAAQ,CAACP,oBAAoB,CAACG,gBAAD,CAArB,CAAR;AACH;AAHE,GAAP;AAKH;;AAIDM,gBAAgB,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeT,IAAf,EAAqBU,EAArB,KAA4B;AAC3C,MAAIV,IAAI,KAAK,SAAb,EAAwB;AACpB,QAAIW,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,KAAL,CAAWU,QAAX,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAqD;AACjD,UAAI,KAAKT,KAAL,CAAWU,QAAX,CAAoBD,CAApB,EAAuBG,WAAvB,KAAuCN,MAA3C,EAAmD;AAC/CE,QAAAA,OAAO,GAAG,KAAKR,KAAL,CAAWU,QAAX,CAAoBD,CAApB,CAAV;AACA;AACH;AACJ;;AACD,SAAKI,QAAL,CAAc,EACV,GAAG,KAAKb,KADE;AAEVc,MAAAA,eAAe,EAAEN,OAFP;AAGVO,MAAAA,oBAAoB,EAAE,KAHZ;AAIVC,MAAAA,mBAAmB,EAAEX,IAJX;AAKVE,MAAAA,EAAE,EAAE;AALM,KAAd;AAOH,GAfD,MAgBK;AACD,SAAKM,QAAL,CAAc,EACV,GAAG,KAAKb,KADE;AAEVF,MAAAA,gBAAgB,EAAEQ,MAFR;AAGVS,MAAAA,oBAAoB,EAAEV,IAHZ;AAIVW,MAAAA,mBAAmB,EAAE,KAJX;AAKVT,MAAAA,EAAE,EAAE;AALM,KAAd;AAOH;AACJ,CA1BD","sourcesContent":["export function updateCityNameAction(city) {\n    return {\n        type: \"UPDATE_CITY\",\n        selectedLocation: city\n    };\n}\n\nexport function mapStateToProps(state) {\n    return {\n        ...state,\n        selectedLocation: state.selectedLocation\n    };\n}\n\nexport function mapDispatchToProps(dispatch) {\n    return {\n        changeCityName: function (selectedLocation) {\n            dispatch(updateCityNameAction(selectedLocation));\n        }\n    };\n}\n\n\n\nchangeEntityFlag = (flag, entity, type, id) => {\n    if (type === \"Version\") {\n        let sel_ver = {};\n        for (let i = 0; i < this.state.versions.length; i++) {\n            if (this.state.versions[i].versionName === entity) {\n                sel_ver = this.state.versions[i];\n                break;\n            }\n        }\n        this.setState({\n            ...this.state,\n            selectedVersion: sel_ver,\n            locationPopUpVisible: false,\n            versionPopUpVisible: flag,\n            id: 0\n        });\n    }\n    else {\n        this.setState({\n            ...this.state,\n            selectedLocation: entity,\n            locationPopUpVisible: flag,\n            versionPopUpVisible: false,\n            id: 1\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}