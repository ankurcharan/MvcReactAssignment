{"ast":null,"code":"import _classCallCheck from\"D:/reactmvc/MvcReactAssignment/ReactModelPage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/reactmvc/MvcReactAssignment/ReactModelPage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/reactmvc/MvcReactAssignment/ReactModelPage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/reactmvc/MvcReactAssignment/ReactModelPage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _objectSpread from\"D:/reactmvc/MvcReactAssignment/ReactModelPage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import'../App.css';import{connect}from\"react-redux\";import CarName from'./CarName';import CarImage from'./CarImage';import NavBar from'./NavBar';import PriceDetails from'./PriceDetails';import CityVersionBox from'./CityVersionBox';import CommonPopUp from'./CommonPopUp';var NavBarConnect=connect(mapStateToProps,mapDispatchToProps)(NavBar);var CityVersionBoxConnect=connect(mapStateToProps,mapDispatchToProps)(CityVersionBox);var CommonPopUpConnect=connect(mapStateToProps,mapDispatchToProps)(CommonPopUp);function updateCityNameAction(city){return{type:\"UPDATE_CITY\",selectedLocation:city};}function mapStateToProps(state){return _objectSpread(_objectSpread({},state),{},{selectedLocation:state.selectedLocation});}function mapDispatchToProps(dispatch){return{changeCityName:function changeCityName(selectedLocation){dispatch(updateCityNameAction(selectedLocation));}};}var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.changeEntityFlag=function(flag,entity,type){if(type===\"Version\"){var sel_ver={};for(var i=0;i<_this.state.versions.length;i++){if(_this.state.versions[i].versionName===entity){sel_ver=_this.state.versions[i];break;}}_this.setState(_objectSpread(_objectSpread({},_this.state),{},{selectedVersion:sel_ver,locationPopUpVisible:false,versionPopUpVisible:flag}));}else{_this.setState(_objectSpread(_objectSpread({},_this.state),{},{selectedLocation:entity,locationPopUpVisible:flag,versionPopUpVisible:false}));}};_this.state={id:1,models:[],selectedModel:{},dataRecieved:false,locationPopUpVisible:false,versionPopUpVisible:false,versions:[],locations:[],selectedLocation:\"\",selectedVersion:{}};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"http://localhost:5000/home/GetModelsDetails?companyId=1\").then(function(res){return res.json();}).then(function(result){console.log(result);fetch(\"http://localhost:5000/home/getcardetails?companyId=1&modelId=2\").then(function(res1){return res1.json();}).then(function(versions){console.log(versions);fetch(\"http://localhost:5000/home/GetCities\").then(function(res2){return res2.json();}).then(function(location){console.log(location);_this2.setState(_objectSpread(_objectSpread({},_this2.state),{},{dataRecieved:true,models:result,selectedModel:result[0],versions:versions,locations:location,selectedLocation:location[0],selectedVersion:versions[0]}));},function(errorlocation){console.log(\"Error City fetch:\",errorlocation);});},function(errorversion){console.log(\"Error: version fetch:\",errorversion);});},function(errorcar){console.log(\"Error: cardata fetch: \",errorcar);});}},{key:\"render\",value:function render(){if(this.state.dataRecieved){if(this.state.locationPopUpVisible){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CommonPopUpConnect,{popUpType:\"Location\",entityList:this.state.locations,changeEntityFlag:this.changeEntityFlag,selectedEntity:this.state.selectedLocation,popUpVisible:this.state.locationPopUpVisible})});}else if(this.state.versionPopUpVisible){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CommonPopUpConnect,{popUpType:\"Version\",entityList:this.state.versions,changeEntityFlag:this.changeEntityFlag,selectedEntity:this.state.selectedVersion,popUpVisible:this.state.versionPopUpVisible})});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"Container\",children:[/*#__PURE__*/_jsx(NavBarConnect,{selectedLocation:this.state.selectedLocation,changeEntityFlag:this.changeEntityFlag}),/*#__PURE__*/_jsx(CarImage,{model:this.state.selectedModel}),/*#__PURE__*/_jsx(CarName,{model:this.state.selectedModel}),/*#__PURE__*/_jsx(CityVersionBoxConnect,{selectedLocation:this.state.selectedLocation,selectedVersion:this.state.selectedVersion,changeEntityFlag:this.changeEntityFlag}),/*#__PURE__*/_jsx(PriceDetails,{selectedVersion:this.state.selectedVersion})]});}}else{return/*#__PURE__*/_jsx(\"div\",{children:\"console.log(\\\"error\\\")\"});}}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["D:/reactmvc/MvcReactAssignment/ReactModelPage/src/component/App.js"],"names":["React","connect","CarName","CarImage","NavBar","PriceDetails","CityVersionBox","CommonPopUp","NavBarConnect","mapStateToProps","mapDispatchToProps","CityVersionBoxConnect","CommonPopUpConnect","updateCityNameAction","city","type","selectedLocation","state","dispatch","changeCityName","App","props","changeEntityFlag","flag","entity","sel_ver","i","versions","length","versionName","setState","selectedVersion","locationPopUpVisible","versionPopUpVisible","id","models","selectedModel","dataRecieved","locations","fetch","then","res","json","result","console","log","res1","res2","location","errorlocation","errorversion","errorcar","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport { connect } from \"react-redux\";\nimport CarName from './CarName'\nimport CarImage from './CarImage'\nimport NavBar from './NavBar'\nimport PriceDetails from './PriceDetails'\nimport CityVersionBox from './CityVersionBox'\nimport CommonPopUp from './CommonPopUp'\n\nconst NavBarConnect = connect(mapStateToProps,mapDispatchToProps)(NavBar);\nconst CityVersionBoxConnect = connect(mapStateToProps,mapDispatchToProps)(CityVersionBox);\nconst CommonPopUpConnect = connect(mapStateToProps,mapDispatchToProps)(CommonPopUp);\n\nfunction updateCityNameAction(city) {\n  return {\n    type: \"UPDATE_CITY\",\n    selectedLocation: city\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state,\n    selectedLocation: state.selectedLocation\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeCityName: function(selectedLocation) {\n      dispatch(updateCityNameAction(selectedLocation));\n    }\n  };\n}\n\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      id : 1,\n      models : [],\n      selectedModel : {},\n      dataRecieved : false,\n      locationPopUpVisible : false,\n      versionPopUpVisible : false,\n      versions : [],\n      locations : [], \n      selectedLocation : \"\",\n      selectedVersion : {},\n    }\n  }\n\n  componentDidMount()\n  {\n    fetch(\"http://localhost:5000/home/GetModelsDetails?companyId=1\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n\n           \n          fetch(\"http://localhost:5000/home/getcardetails?companyId=1&modelId=2\")\n            .then(res1 => res1.json())\n            .then(\n            (versions) => {\n              console.log(versions);\n\n              fetch(\"http://localhost:5000/home/GetCities\")\n              .then(res2 => res2.json())\n              .then(\n              (location) => {\n                console.log(location);\n\n              this.setState({\n                ...this.state,\n                dataRecieved : true,\n                models : result,\n                selectedModel : result[0],\n                versions : versions,\n                locations : location,\n                selectedLocation : location[0],\n                selectedVersion : versions[0],\n                \n              });\n              \n            },\n\n            (errorlocation) => {\n              console.log(\"Error City fetch:\",errorlocation)\n            }\n          );\n        },\n\n        (errorversion) => {\n          console.log(\"Error: version fetch:\",errorversion)\n        }\n      );\n    },\n\n        (errorcar) => {\n          console.log(\"Error: cardata fetch: \",errorcar);\n        }\n      );\n  }\n\n  changeEntityFlag = (flag, entity, type) => {\n    if(type === \"Version\")\n    {\n      let sel_ver = {};\n      for (let i = 0; i < this.state.versions.length; i++) {\n        if(this.state.versions[i].versionName === entity)\n        {\n          sel_ver = this.state.versions[i];\n          break;\n        }\n      }\n      this.setState({\n        ...this.state,\n        selectedVersion : sel_ver,\n        locationPopUpVisible : false,\n        versionPopUpVisible : flag\n      });\n    }\n    else\n    {\n      this.setState({\n        ...this.state,\n        selectedLocation : entity,\n        locationPopUpVisible : flag,\n        versionPopUpVisible : false\n      });\n    }\n  }\n  \n\n\n  render()\n  {\n    if(this.state.dataRecieved)\n    {\n      if(this.state.locationPopUpVisible)\n      {\n        return(\n          <div><CommonPopUpConnect popUpType=\"Location\" entityList={this.state.locations} changeEntityFlag={this.changeEntityFlag} selectedEntity={this.state.selectedLocation} popUpVisible={this.state.locationPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else if(this.state.versionPopUpVisible)\n      {\n        return(\n          <div><CommonPopUpConnect popUpType=\"Version\" entityList={this.state.versions} changeEntityFlag={this.changeEntityFlag} selectedEntity={this.state.selectedVersion} popUpVisible={this.state.versionPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else\n      {\n        return(\n          <div className=\"Container\">\n            <NavBarConnect selectedLocation={this.state.selectedLocation} changeEntityFlag={this.changeEntityFlag}></NavBarConnect>\n            <CarImage model={this.state.selectedModel}></CarImage>\n            <CarName model={this.state.selectedModel}></CarName>\n            <CityVersionBoxConnect selectedLocation={this.state.selectedLocation} selectedVersion={this.state.selectedVersion} changeEntityFlag={this.changeEntityFlag}></CityVersionBoxConnect>\n            <PriceDetails selectedVersion={this.state.selectedVersion}></PriceDetails>\n          </div>\n        );\n      }\n    }\n    else\n    {\n      return(\n        <div>console.log(\"error\")</div>\n      );\n    }\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}