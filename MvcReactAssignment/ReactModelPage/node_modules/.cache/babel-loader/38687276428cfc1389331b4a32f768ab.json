{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactmvc\\\\MvcReactAssignment\\\\ReactModelPage\\\\src\\\\component\\\\App.js\";\nimport React from \"react\";\nimport '../App.css';\nimport CarName from './CarName';\nimport CarImage from './CarImage';\nimport { NavBarConnect } from './NavBar';\nimport PriceDetails from './PriceDetails';\nimport { CityVersionBoxConnect } from './CityVersionBox';\nimport { CommonPopUpConnect } from './CommonPopUp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeEntityFlag = (flag, entity, type) => {\n      if (type === \"Version\") {\n        this.setState({ ...this.state,\n          selectedVersion: entity,\n          locationPopUpVisible: false,\n          versionPopUpVisible: flag\n        });\n      } else {\n        this.setState({ ...this.state,\n          selectedLocation: entity,\n          locationPopUpVisible: flag,\n          versionPopUpVisible: false\n        });\n      }\n    };\n\n    this.togglePopUpFlag = () => {\n      this.setState({ ...this.state,\n        locationPopUpVisible: false,\n        versionPopUpVisible: false\n      });\n    };\n\n    this.state = {\n      id: 0,\n      models: [],\n      selectedModel: {},\n      dataRecieved: false,\n      locationPopUpVisible: false,\n      versionPopUpVisible: false,\n      versions: [],\n      locations: [],\n      selectedLocation: \"\",\n      selectedVersion: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/home/GetModelsDetails?companyId=1\").then(res => res.json()).then(result => {\n      console.log(result);\n      fetch(\"http://localhost:5000/home/getcardetails?companyId=1&modelId=1\").then(res1 => res1.json()).then(Versions => {\n        console.log(Versions);\n        fetch(\"http://localhost:5000/home/GetCities\").then(res2 => res2.json()).then(location => {\n          console.log(location);\n          this.setState({ ...this.state,\n            dataRecieved: true,\n            models: result,\n            selectedModel: result[0],\n            versions: Versions,\n            locations: location,\n            selectedLocation: location[0],\n            selectedVersion: Versions[0]\n          });\n        }, errorlocation => {\n          console.log(\"Error: City fetch:\", errorlocation);\n        });\n      }, errorversion => {\n        console.log(\"Error: version fetch:\", errorversion);\n      });\n    }, errorcar => {\n      console.log(\"Error: cardata fetch: \", errorcar);\n    });\n  }\n  /* changeEntityFlag = (flag, entity, type, id) => {\n     if (type === \"Version\") {\n         let sel_ver = {};\n         for (let i = 0; i < this.state.versions.length; i++) {\n             if (this.state.versions[i].versionName === entity) {\n                 sel_ver = this.state.versions[i];\n                 break;\n             }\n         }\n         this.setState({\n             ...this.state,\n             selectedVersion: sel_ver,\n             locationPopUpVisible: false,\n             versionPopUpVisible: flag,\n             id: 0\n         });\n     }\n     else {\n         this.setState({\n             ...this.state,\n             selectedLocation: entity,\n             locationPopUpVisible: flag,\n             versionPopUpVisible: false,\n             id: 1\n         });\n     }\n  }*/\n\n\n  render() {\n    if (this.state.dataRecieved) {\n      if (this.state.locationPopUpVisible) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CommonPopUpConnect, {\n            popUpType: \"Location\",\n            entityList: this.state.locations,\n            changeEntityFlag: this.changeEntityFlag,\n            selectedEntity: this.state.selectedLocation,\n            popUpVisible: this.state.locationPopUpVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.versionPopUpVisible) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CommonPopUpConnect, {\n            popUpType: \"Version\",\n            entityList: this.state.versions,\n            changeEntityFlag: this.changeEntityFlag,\n            selectedEntity: this.state.selectedVersion,\n            popUpVisible: this.state.versionPopUpVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          children: [/*#__PURE__*/_jsxDEV(NavBarConnect, {\n            selectedLocation: this.state.selectedLocation,\n            changeEntityFlag: this.changeEntityFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CarImage, {\n            model: this.state.selectedModel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CarName, {\n            model: this.state.selectedModel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CityVersionBoxConnect, {\n            selectedLocation: this.state.selectedLocation,\n            selectedVersion: this.state.selectedVersion,\n            changeEntityFlag: this.changeEntityFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceDetails, {\n            selectedVersion: this.state.selectedVersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"console.log(\\\"error\\\")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/reactmvc/MvcReactAssignment/ReactModelPage/src/component/App.js"],"names":["React","CarName","CarImage","NavBarConnect","PriceDetails","CityVersionBoxConnect","CommonPopUpConnect","App","Component","constructor","props","changeEntityFlag","flag","entity","type","setState","state","selectedVersion","locationPopUpVisible","versionPopUpVisible","selectedLocation","togglePopUpFlag","id","models","selectedModel","dataRecieved","versions","locations","componentDidMount","fetch","then","res","json","result","console","log","res1","Versions","res2","location","errorlocation","errorversion","errorcar","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport CarName from './CarName'\nimport CarImage from './CarImage'\nimport { NavBarConnect } from './NavBar'\nimport PriceDetails from './PriceDetails'\nimport { CityVersionBoxConnect } from './CityVersionBox'\nimport { CommonPopUpConnect } from './CommonPopUp'\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: 0,\n      models: [],\n      selectedModel: {},\n      dataRecieved: false,\n      locationPopUpVisible: false,\n      versionPopUpVisible: false,\n      versions: [],\n      locations: [],\n      selectedLocation: \"\",\n      selectedVersion: {},\n    }\n  }\n\n\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/home/GetModelsDetails?companyId=1\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n\n\n          fetch(\"http://localhost:5000/home/getcardetails?companyId=1&modelId=1\")\n            .then(res1 => res1.json())\n            .then(\n              (Versions) => {\n                console.log(Versions);\n\n                fetch(\"http://localhost:5000/home/GetCities\")\n                  .then(res2 => res2.json())\n                  .then(\n                    (location) => {\n                      console.log(location);\n\n                      this.setState({\n                        ...this.state,\n                        dataRecieved: true,\n                        models: result,\n                        selectedModel: result[0],\n                        versions: Versions,\n                        locations: location,\n                        selectedLocation: location[0],\n                        selectedVersion: Versions[0],\n\n                      });\n\n                    },\n\n                    (errorlocation) => {\n                      console.log(\"Error: City fetch:\", errorlocation)\n                    }\n                  );\n              },\n\n              (errorversion) => {\n                console.log(\"Error: version fetch:\", errorversion)\n              }\n            );\n        },\n\n        (errorcar) => {\n          console.log(\"Error: cardata fetch: \", errorcar);\n        }\n      );\n  }\n\n\n\n /* changeEntityFlag = (flag, entity, type, id) => {\n    if (type === \"Version\") {\n        let sel_ver = {};\n        for (let i = 0; i < this.state.versions.length; i++) {\n            if (this.state.versions[i].versionName === entity) {\n                sel_ver = this.state.versions[i];\n                break;\n            }\n        }\n        this.setState({\n            ...this.state,\n            selectedVersion: sel_ver,\n            locationPopUpVisible: false,\n            versionPopUpVisible: flag,\n            id: 0\n        });\n    }\n    else {\n        this.setState({\n            ...this.state,\n            selectedLocation: entity,\n            locationPopUpVisible: flag,\n            versionPopUpVisible: false,\n            id: 1\n        });\n    }\n}*/\n\n\nchangeEntityFlag = (flag, entity, type) => {\n  if(type === \"Version\")\n  {\n    this.setState({\n      ...this.state,\n      selectedVersion : entity,\n      locationPopUpVisible : false,\n      versionPopUpVisible : flag\n    });\n  }\n  else\n  {\n    this.setState({\n      ...this.state,\n      selectedLocation : entity,\n      locationPopUpVisible : flag,\n      versionPopUpVisible : false\n    });\n  }\n}\n\ntogglePopUpFlag = () => {\n  this.setState({\n    ...this.state,\n    locationPopUpVisible:false,\n    versionPopUpVisible:false\n  });\n}\n\n\n  render() {\n    if (this.state.dataRecieved) {\n      if (this.state.locationPopUpVisible) {\n        return (\n          <div><CommonPopUpConnect popUpType=\"Location\" entityList={this.state.locations} changeEntityFlag={ this.changeEntityFlag} selectedEntity={this.state.selectedLocation} popUpVisible={this.state.locationPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else if (this.state.versionPopUpVisible) {\n        return (\n          <div><CommonPopUpConnect popUpType=\"Version\" entityList={this.state.versions} changeEntityFlag={this.changeEntityFlag} selectedEntity={this.state.selectedVersion} popUpVisible={this.state.versionPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else {\n        return (\n          <div className=\"Container\">\n            <NavBarConnect selectedLocation={this.state.selectedLocation} changeEntityFlag={ this.changeEntityFlag}></NavBarConnect>\n            <CarImage model={this.state.selectedModel}></CarImage>\n            <CarName model={this.state.selectedModel}></CarName>\n            <CityVersionBoxConnect selectedLocation={this.state.selectedLocation} selectedVersion={this.state.selectedVersion} changeEntityFlag={ this.changeEntityFlag}></CityVersionBoxConnect>\n            <PriceDetails selectedVersion={this.state.selectedVersion}></PriceDetails>\n          </div>\n        );\n      }\n    }\n    else {\n      return (\n        <div>console.log(\"error\")</div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}