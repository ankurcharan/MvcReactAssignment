{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\prerna.c\\\\Downloads\\\\mvcreact-main (1)\\\\mvcreact-main\\\\MvcReactAssignment\\\\ReactModelPage\\\\src\\\\component\\\\App.js\";\nimport React from \"react\";\nimport '../App.css';\nimport { connect } from \"react-redux\";\nimport CarName from './CarName';\nimport CarImage from './CarImage';\nimport NavBar from './NavBar';\nimport PriceDetails from './PriceDetails';\nimport CityVersionBox from './CityVersionBox';\nimport CommonPopUp from './CommonPopUp';\nimport { mapDispatchToProps, mapStateToProps } from '../Actions/cityAction';\nimport { fetchData } from '../Actions/fetchDataFromApi';\nconst NavBarConnect = connect(mapStateToProps, mapDispatchToProps)(NavBar);\nconst CityVersionBoxConnect = connect(mapStateToProps, mapDispatchToProps)(CityVersionBox);\nconst CommonPopUpConnect = connect(mapStateToProps, mapDispatchToProps)(CommonPopUp);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeEntityFlag = (flag, entity, type, id) => {\n      if (type === \"Version\") {\n        let sel_ver = {};\n\n        for (let i = 0; i < this.state.versions.length; i++) {\n          if (this.state.versions[i].versionName === entity) {\n            sel_ver = this.state.versions[i];\n            break;\n          }\n        }\n\n        this.setState({ ...this.state,\n          selectedVersion: sel_ver,\n          locationPopUpVisible: false,\n          versionPopUpVisible: flag,\n          id: 0\n        });\n      } else {\n        this.setState({ ...this.state,\n          selectedLocation: entity,\n          locationPopUpVisible: flag,\n          versionPopUpVisible: false,\n          id: 1\n        });\n      }\n    };\n\n    this.state = {\n      id: 0,\n      models: [],\n      selectedModel: {},\n      dataRecieved: false,\n      locationPopUpVisible: false,\n      versionPopUpVisible: false,\n      versions: [],\n      locations: [],\n      selectedLocation: \"\",\n      selectedVersion: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/home/GetModelsDetails?companyId=1\").then(res => res.json()).then(result => {\n      console.log(result);\n      fetch(\"http://localhost:5000/home/getcardetails?companyId=1&modelId=1\").then(res1 => res1.json()).then(versions => {\n        console.log(versions);\n        location = [];\n        location = fetchData(\"http://localhost:5000/Home/getcities\");\n        console.log(location);\n        console.log(location[0]);\n        this.setState({ ...this.state,\n          dataRecieved: true,\n          models: result,\n          selectedModel: result[0],\n          versions: versions,\n          locations: location,\n          selectedLocation: location[0],\n          selectedVersion: versions[0]\n        });\n\n        errorlocation => {\n          console.log(\"Error City fetch:\", errorlocation);\n        };\n\n        errorversion => {\n          console.log(\"Error: version fetch:\", errorversion);\n        };\n      });\n\n      errorcar => {\n        console.log(\"Error: cardata fetch: \", errorcar);\n      };\n    });\n  }\n\n  render() {\n    if (this.state.dataRecieved) {\n      if (this.state.locationPopUpVisible) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CommonPopUpConnect, {\n            popUpType: \"Location\",\n            entityList: this.state.locations,\n            changeEntityFlag: this.changeEntityFlag,\n            selectedEntity: this.state.selectedLocation,\n            popUpVisible: this.state.locationPopUpVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.versionPopUpVisible) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CommonPopUpConnect, {\n            popUpType: \"Version\",\n            entityList: this.state.versions,\n            changeEntityFlag: this.changeEntityFlag,\n            selectedEntity: this.state.selectedVersion,\n            popUpVisible: this.state.versionPopUpVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          children: [/*#__PURE__*/_jsxDEV(NavBarConnect, {\n            selectedLocation: this.state.selectedLocation,\n            changeEntityFlag: this.changeEntityFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CarImage, {\n            model: this.state.selectedModel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CarName, {\n            model: this.state.selectedModel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CityVersionBoxConnect, {\n            selectedLocation: this.state.selectedLocation,\n            selectedVersion: this.state.selectedVersion,\n            changeEntityFlag: this.changeEntityFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceDetails, {\n            selectedVersion: this.state.selectedVersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"console.log(\\\"error\\\")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/prerna.c/Downloads/mvcreact-main (1)/mvcreact-main/MvcReactAssignment/ReactModelPage/src/component/App.js"],"names":["React","connect","CarName","CarImage","NavBar","PriceDetails","CityVersionBox","CommonPopUp","mapDispatchToProps","mapStateToProps","fetchData","NavBarConnect","CityVersionBoxConnect","CommonPopUpConnect","App","Component","constructor","props","changeEntityFlag","flag","entity","type","id","sel_ver","i","state","versions","length","versionName","setState","selectedVersion","locationPopUpVisible","versionPopUpVisible","selectedLocation","models","selectedModel","dataRecieved","locations","componentDidMount","fetch","then","res","json","result","console","log","res1","location","errorlocation","errorversion","errorcar","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport { connect } from \"react-redux\";\nimport CarName from './CarName'\nimport CarImage from './CarImage'\nimport NavBar from './NavBar'\nimport PriceDetails from './PriceDetails'\nimport CityVersionBox from './CityVersionBox'\nimport CommonPopUp from './CommonPopUp'\nimport { mapDispatchToProps, mapStateToProps } from '../Actions/cityAction'\nimport { fetchData } from '../Actions/fetchDataFromApi'\n\n\nconst NavBarConnect = connect(mapStateToProps, mapDispatchToProps)(NavBar);\nconst CityVersionBoxConnect = connect(mapStateToProps, mapDispatchToProps)(CityVersionBox);\nconst CommonPopUpConnect = connect(mapStateToProps, mapDispatchToProps)(CommonPopUp);\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: 0,\n      models: [],\n      selectedModel: {},\n      dataRecieved: false,\n      locationPopUpVisible: false,\n      versionPopUpVisible: false,\n      versions: [],\n      locations: [],\n      selectedLocation: \"\",\n      selectedVersion: {},\n    }\n  }\n\n\n  changeEntityFlag = (flag, entity, type, id) => {\n    if (type === \"Version\") {\n        let sel_ver = {};\n        for (let i = 0; i < this.state.versions.length; i++) {\n            if (this.state.versions[i].versionName === entity) {\n                sel_ver = this.state.versions[i];\n                break;\n            }\n        }\n        this.setState({\n            ...this.state,\n            selectedVersion: sel_ver,\n            locationPopUpVisible: false,\n            versionPopUpVisible: flag,\n            id: 0\n        });\n    }\n    else {\n        this.setState({\n            ...this.state,\n            selectedLocation: entity,\n            locationPopUpVisible: flag,\n            versionPopUpVisible: false,\n            id: 1\n        });\n    }\n}\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/home/GetModelsDetails?companyId=1\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n\n\n          fetch(\"http://localhost:5000/home/getcardetails?companyId=1&modelId=1\")\n            .then(res1 => res1.json())\n            .then(\n              (versions) => {\n                console.log(versions);\n\n\n                 location = []\n                 location = fetchData(\"http://localhost:5000/Home/getcities\")\n                 console.log(location)\n                 console.log(location[0])\n                      this.setState({\n                        ...this.state,\n                        dataRecieved: true,\n                        models: result,\n                        selectedModel: result[0],\n                        versions: versions,\n                        locations: location,\n                        selectedLocation: location[0],\n                        selectedVersion: versions[0],\n\n                      });\n\n                    (errorlocation) => {\n                      console.log(\"Error City fetch:\", errorlocation)\n                    }\n             \n                \n              (errorversion) => {\n                console.log(\"Error: version fetch:\", errorversion)\n              }\n      \n            },\n            );\n          \n        (errorcar) => {\n          console.log(\"Error: cardata fetch: \", errorcar);\n        }\n      },\n      );\n  }\n\n\n\n\n\n  render() {\n    if (this.state.dataRecieved) {\n      if (this.state.locationPopUpVisible) {\n        return (\n          <div><CommonPopUpConnect popUpType=\"Location\" entityList={this.state.locations} changeEntityFlag={ this.changeEntityFlag } selectedEntity={this.state.selectedLocation} popUpVisible={this.state.locationPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else if (this.state.versionPopUpVisible) {\n        return (\n          <div><CommonPopUpConnect popUpType=\"Version\" entityList={this.state.versions} changeEntityFlag={ this.changeEntityFlag } selectedEntity={this.state.selectedVersion} popUpVisible={this.state.versionPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else {\n        return (\n          <div className=\"Container\">\n            <NavBarConnect selectedLocation={this.state.selectedLocation} changeEntityFlag={ this.changeEntityFlag}></NavBarConnect>\n            <CarImage model={this.state.selectedModel}></CarImage>\n            <CarName model={this.state.selectedModel}></CarName>\n            <CityVersionBoxConnect selectedLocation={this.state.selectedLocation} selectedVersion={this.state.selectedVersion} changeEntityFlag={ this.changeEntityFlag}></CityVersionBoxConnect>\n            <PriceDetails selectedVersion={this.state.selectedVersion}></PriceDetails>\n          </div>\n        );\n      }\n    }\n    else {\n      return (\n        <div>console.log(\"error\")</div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}