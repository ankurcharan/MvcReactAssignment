{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ReactAssignment\\\\carmodel-assign\\\\src\\\\Components\\\\Headerr.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Logo from '../Assets/cw_logo.png';\nimport LocationIcon from '../Assets/location.png';\nimport { connect } from 'react-redux';\nimport Popup from './Popup';\n\nfunction Header(props) {\n  _s();\n\n  const {\n    Cities,\n    SelectedCity,\n    setSelectedCity\n  } = props;\n  const initialState = false; // State to set Location visibility \n\n  const [LocationVisible, setLocationVisible] = useState(initialState);\n  const [PopUpVisible, setPopUpVisible] = useState(false);\n  useEffect(() => {\n    let VisibilityTimer;\n\n    if (LocationVisible) {\n      VisibilityTimer = setTimeout(() => {\n        setLocationVisible(false);\n      }, 5000);\n    }\n\n    return () => {\n      clearTimeout(VisibilityTimer);\n    };\n  }, [LocationVisible]); //popup handler\n\n  const PopUpHandler = option => {\n    setPopUpVisible(false);\n    setSelectedCity(option);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Header\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Logo,\n      alt: \"logo\",\n      id: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: LocationIcon,\n      alt: \"location\",\n      onMouseEnter: () => setLocationVisible(true),\n      onClick: () => setPopUpVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), LocationVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"HeaderLocation\",\n      children: `Location : ${Cities[SelectedCity]}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }, this) : null, PopUpVisible ? /*#__PURE__*/_jsxDEV(Popup, {\n      ID: \"HeaderPopUp\",\n      Type: \"HeaderCities\",\n      ListData: Cities,\n      stateFunc: PopUpHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"RVmAGzspiRiZO/qo0acF9EUtJaU=\");\n\n_c = Header;\n\nconst MapStateToProps = state => {\n  return {\n    Cities: state.CityList,\n    SelectedCity: state.SelectedCity\n  };\n};\n\n_c2 = MapStateToProps;\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    setSelectedCity: CityID => dispatch({\n      type: \"SELECT_CITY\",\n      CityID: CityID\n    })\n  };\n};\n\n_c3 = MapDispatchToProps;\nexport default connect(MapStateToProps, MapDispatchToProps)(Header);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"MapStateToProps\");\n$RefreshReg$(_c3, \"MapDispatchToProps\");","map":{"version":3,"sources":["D:/ReactAssignment/carmodel-assign/src/Components/Headerr.js"],"names":["React","useState","useEffect","Logo","LocationIcon","connect","Popup","Header","props","Cities","SelectedCity","setSelectedCity","initialState","LocationVisible","setLocationVisible","PopUpVisible","setPopUpVisible","VisibilityTimer","setTimeout","clearTimeout","PopUpHandler","option","MapStateToProps","state","CityList","MapDispatchToProps","dispatch","CityID","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAA0CH,KAAhD;AACA,QAAMI,YAAY,GAAG,KAArB,CAHmB,CAKnB;;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAACW,YAAD,CAAtD;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,eAAJ;;AACA,QAAGJ,eAAH,EACA;AACII,MAAAA,eAAe,GAAGC,UAAU,CAAC,MAAM;AAC/BJ,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,OAF2B,EAEzB,IAFyB,CAA5B;AAGH;;AACD,WAAO,MAAM;AACTK,MAAAA,YAAY,CAACF,eAAD,CAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,CAACJ,eAAD,CAXM,CAAT,CATmB,CAsBnB;;AACA,QAAMO,YAAY,GAAIC,MAAD,IAAY;AAC7BL,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAL,IAAAA,eAAe,CAACU,MAAD,CAAf;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,EAAE,EAAG,QAAV;AAAA,4BACI;AAAK,MAAA,GAAG,EAAIlB,IAAZ;AAAkB,MAAA,GAAG,EAAG,MAAxB;AAA+B,MAAA,EAAE,EAAG;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAIC,YAAZ;AAA0B,MAAA,GAAG,EAAG,UAAhC;AAA2C,MAAA,YAAY,EAAI,MAAMU,kBAAkB,CAAC,IAAD,CAAnF;AAA2F,MAAA,OAAO,EAAI,MAAME,eAAe,CAAC,IAAD;AAA3H;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKH,eAAe,gBAAG;AAAK,MAAA,EAAE,EAAG,gBAAV;AAAA,gBAA6B,cAAaJ,MAAM,CAACC,YAAD,CAAe;AAA/D;AAAA;AAAA;AAAA;AAAA,YAAH,GAA6E,IAHjG,EAIKK,YAAY,gBAAG,QAAC,KAAD;AAAO,MAAA,EAAE,EAAI,aAAb;AAA4B,MAAA,IAAI,EAAG,cAAnC;AAAkD,MAAA,QAAQ,EAAIN,MAA9D;AAAsE,MAAA,SAAS,EAAIW;AAAnF;AAAA;AAAA;AAAA;AAAA,YAAH,GAAwG,IAJzH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GApCQb,M;;KAAAA,M;;AAsCT,MAAMe,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHd,IAAAA,MAAM,EAAGc,KAAK,CAACC,QADZ;AAEHd,IAAAA,YAAY,EAAGa,KAAK,CAACb;AAFlB,GAAP;AAIH,CALD;;MAAMY,e;;AAON,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHf,IAAAA,eAAe,EAAIgB,MAAD,IAAYD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAG,aAAR;AAAuBD,MAAAA,MAAM,EAAGA;AAAhC,KAAD;AADnC,GAAP;AAGH,CAJD;;MAAMF,kB;AAMN,eAAepB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,MAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Logo from '../Assets/cw_logo.png';\r\nimport LocationIcon from '../Assets/location.png';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Popup from './Popup';\r\n\r\nfunction Header(props) {\r\n\r\n    const {Cities, SelectedCity, setSelectedCity} = props;\r\n    const initialState = false;\r\n\r\n    // State to set Location visibility \r\n    const [LocationVisible, setLocationVisible] = useState(initialState);\r\n    const [PopUpVisible, setPopUpVisible] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        let VisibilityTimer;\r\n        if(LocationVisible)\r\n        {\r\n            VisibilityTimer = setTimeout(() => {\r\n                setLocationVisible(false);\r\n            }, 5000);\r\n        }\r\n        return () => {\r\n            clearTimeout(VisibilityTimer);\r\n        }\r\n    }, [LocationVisible]);\r\n\r\n    //popup handler\r\n    const PopUpHandler = (option) => {\r\n        setPopUpVisible(false);\r\n        setSelectedCity(option);\r\n    }\r\n\r\n    return (\r\n        <div id = \"Header\">\r\n            <img src = {Logo} alt = \"logo\" id = \"Logo\"/>\r\n            <img src = {LocationIcon} alt = \"location\" onMouseEnter = {() => setLocationVisible(true)} onClick = {() => setPopUpVisible(true)}/>\r\n            {LocationVisible ? <div id = \"HeaderLocation\">{`Location : ${Cities[SelectedCity]}`}</div> : null}\r\n            {PopUpVisible ? <Popup ID = {\"HeaderPopUp\"} Type = \"HeaderCities\" ListData = {Cities} stateFunc = {PopUpHandler}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        Cities : state.CityList,\r\n        SelectedCity : state.SelectedCity\r\n    }\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCity : (CityID) => dispatch({type : \"SELECT_CITY\", CityID : CityID}) \r\n    }\r\n};\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Header);"]},"metadata":{},"sourceType":"module"}