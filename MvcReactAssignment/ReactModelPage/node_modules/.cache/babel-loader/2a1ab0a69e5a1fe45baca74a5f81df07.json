{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\prerna.c\\\\Downloads\\\\mvcreact-main (1)\\\\mvcreact-main\\\\MvcReactAssignment\\\\ReactModelPage\\\\src\\\\component\\\\App.js\";\nimport React from \"react\";\nimport '../App.css';\nimport { connect } from \"react-redux\";\nimport CarName from './CarName';\nimport CarImage from './CarImage';\nimport NavBar from './NavBar';\nimport PriceDetails from './PriceDetails';\nimport CityVersionBox from './CityVersionBox';\nimport CommonPopUp from './CommonPopUp';\nimport { mapDispatchToProps, mapStateToProps } from '../Actions/cityAction';\nimport { changeEntityFlag } from '../Actions/changeEntityFlag';\nconst NavBarConnect = connect(mapStateToProps, mapDispatchToProps)(NavBar);\nconst CityVersionBoxConnect = connect(mapStateToProps, mapDispatchToProps)(CityVersionBox);\nconst CommonPopUpConnect = connect(mapStateToProps, mapDispatchToProps)(CommonPopUp);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      models: [],\n      selectedModel: {},\n      dataRecieved: false,\n      locationPopUpVisible: false,\n      versionPopUpVisible: false,\n      versions: [],\n      locations: [],\n      selectedLocation: \"\",\n      selectedVersion: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/home/GetModelsDetails?companyId=1\").then(res => res.json()).then(result => {\n      console.log(result);\n      fetch(\"http://localhost:5000/home/getcardetails?companyId=1&modelId=1\").then(res1 => res1.json()).then(versions => {\n        console.log(versions);\n        fetch(\"http://localhost:5000/home/GetCities\").then(res2 => res2.json()).then(location => {\n          console.log(location);\n          this.setState({ ...this.state,\n            dataRecieved: true,\n            models: result,\n            selectedModel: result[0],\n            versions: versions,\n            locations: location,\n            selectedLocation: location[0],\n            selectedVersion: versions[0]\n          });\n        }, errorlocation => {\n          console.log(\"Error City fetch:\", errorlocation);\n        });\n      }, errorversion => {\n        console.log(\"Error: version fetch:\", errorversion);\n      });\n    }, errorcar => {\n      console.log(\"Error: cardata fetch: \", errorcar);\n    });\n  }\n\n  render() {\n    if (this.state.dataRecieved) {\n      if (this.state.locationPopUpVisible) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CommonPopUpConnect, {\n            popUpType: \"Location\",\n            entityList: this.state.locations,\n            changeEntityFlag: changeEntityFlag,\n            selectedEntity: this.state.selectedLocation,\n            popUpVisible: this.state.locationPopUpVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.versionPopUpVisible) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CommonPopUpConnect, {\n            popUpType: \"Version\",\n            entityList: this.state.versions,\n            changeEntityFlag: changeEntityFlag,\n            selectedEntity: this.state.selectedVersion,\n            popUpVisible: this.state.versionPopUpVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          children: [/*#__PURE__*/_jsxDEV(NavBarConnect, {\n            selectedLocation: this.state.selectedLocation,\n            changeEntityFlag: changeEntityFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CarImage, {\n            model: this.state.selectedModel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CarName, {\n            model: this.state.selectedModel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CityVersionBoxConnect, {\n            selectedLocation: this.state.selectedLocation,\n            selectedVersion: this.state.selectedVersion,\n            changeEntityFlag: changeEntityFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceDetails, {\n            selectedVersion: this.state.selectedVersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"console.log(\\\"error\\\")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/prerna.c/Downloads/mvcreact-main (1)/mvcreact-main/MvcReactAssignment/ReactModelPage/src/component/App.js"],"names":["React","connect","CarName","CarImage","NavBar","PriceDetails","CityVersionBox","CommonPopUp","mapDispatchToProps","mapStateToProps","changeEntityFlag","NavBarConnect","CityVersionBoxConnect","CommonPopUpConnect","App","Component","constructor","props","state","id","models","selectedModel","dataRecieved","locationPopUpVisible","versionPopUpVisible","versions","locations","selectedLocation","selectedVersion","componentDidMount","fetch","then","res","json","result","console","log","res1","res2","location","setState","errorlocation","errorversion","errorcar","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport { connect } from \"react-redux\";\nimport CarName from './CarName'\nimport CarImage from './CarImage'\nimport NavBar from './NavBar'\nimport PriceDetails from './PriceDetails'\nimport CityVersionBox from './CityVersionBox'\nimport CommonPopUp from './CommonPopUp'\nimport { mapDispatchToProps, mapStateToProps } from '../Actions/cityAction'\nimport { changeEntityFlag } from '../Actions/changeEntityFlag'\n\nconst NavBarConnect = connect(mapStateToProps, mapDispatchToProps)(NavBar);\nconst CityVersionBoxConnect = connect(mapStateToProps, mapDispatchToProps)(CityVersionBox);\nconst CommonPopUpConnect = connect(mapStateToProps, mapDispatchToProps)(CommonPopUp);\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: 0,\n      models: [],\n      selectedModel: {},\n      dataRecieved: false,\n      locationPopUpVisible: false,\n      versionPopUpVisible: false,\n      versions: [],\n      locations: [],\n      selectedLocation: \"\",\n      selectedVersion: {},\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/home/GetModelsDetails?companyId=1\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n\n\n          fetch(\"http://localhost:5000/home/getcardetails?companyId=1&modelId=1\")\n            .then(res1 => res1.json())\n            .then(\n              (versions) => {\n                console.log(versions);\n\n                fetch(\"http://localhost:5000/home/GetCities\")\n                  .then(res2 => res2.json())\n                  .then(\n                    (location) => {\n                      console.log(location);\n\n                      this.setState({\n                        ...this.state,\n                        dataRecieved: true,\n                        models: result,\n                        selectedModel: result[0],\n                        versions: versions,\n                        locations: location,\n                        selectedLocation: location[0],\n                        selectedVersion: versions[0],\n\n                      });\n\n                    },\n\n                    (errorlocation) => {\n                      console.log(\"Error City fetch:\", errorlocation)\n                    }\n                  );\n              },\n\n              (errorversion) => {\n                console.log(\"Error: version fetch:\", errorversion)\n              }\n            );\n        },\n\n        (errorcar) => {\n          console.log(\"Error: cardata fetch: \", errorcar);\n        }\n      );\n  }\n\n\n\n\n\n  render() {\n    if (this.state.dataRecieved) {\n      if (this.state.locationPopUpVisible) {\n        return (\n          <div><CommonPopUpConnect popUpType=\"Location\" entityList={this.state.locations} changeEntityFlag={changeEntityFlag} selectedEntity={this.state.selectedLocation} popUpVisible={this.state.locationPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else if (this.state.versionPopUpVisible) {\n        return (\n          <div><CommonPopUpConnect popUpType=\"Version\" entityList={this.state.versions} changeEntityFlag={changeEntityFlag} selectedEntity={this.state.selectedVersion} popUpVisible={this.state.versionPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else {\n        return (\n          <div className=\"Container\">\n            <NavBarConnect selectedLocation={this.state.selectedLocation} changeEntityFlag={changeEntityFlag}></NavBarConnect>\n            <CarImage model={this.state.selectedModel}></CarImage>\n            <CarName model={this.state.selectedModel}></CarName>\n            <CityVersionBoxConnect selectedLocation={this.state.selectedLocation} selectedVersion={this.state.selectedVersion} changeEntityFlag={changeEntityFlag}></CityVersionBoxConnect>\n            <PriceDetails selectedVersion={this.state.selectedVersion}></PriceDetails>\n          </div>\n        );\n      }\n    }\n    else {\n      return (\n        <div>console.log(\"error\")</div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}