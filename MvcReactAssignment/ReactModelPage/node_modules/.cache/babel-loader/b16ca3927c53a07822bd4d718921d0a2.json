{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\prerna.c\\\\Downloads\\\\Training2020-amit\\\\Training2020-amit\\\\model-page-frontend\\\\model-page\\\\src\\\\component\\\\CityVersionBox.js\";\nimport React from \"react\";\nimport '../css/App.css';\nexport default class PopUpDisplayBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.OpenLocationPopUp = () => {\n      this.props.changeEntityFlag(true, this.state.selectedLocation, \"Location\");\n    };\n\n    this.OpenVersionPopUp = () => {\n      this.props.changeEntityFlag(true, this.state.selectedVersion, \"Version\");\n    };\n\n    this.OpenModelPopUp = () => {\n      this.props.changeEntityFlag(true, this.state.selectedModel, \"Model\");\n    };\n\n    this.state = {\n      popupName: ['Version', 'City', 'Model'],\n      selectedLocation: props.selectedLocation,\n      selectedModel: props.selectedModel,\n      selectedVersion: props.selectedVersion\n    };\n  }\n\n  render() {\n    const popups = this.state.popupName.map(popup => {\n      if (popup === \"Version\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"0 20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"version\",\n            children: popup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: this.OpenVersionPopUp,\n            children: [\" \", this.state.selectedVersion.versionName]\n          }, popup, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (popup === \"City\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"0 20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"version\",\n            children: popup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: this.OpenLocationPopUp,\n            children: [\" \", this.state.selectedLocation]\n          }, popup, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"0 20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"version\",\n            children: popup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: this.OpenModelPopUp,\n            children: [\" \", this.state.selectedModel.modelName]\n          }, popup, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popUpContainer\",\n      children: popups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/prerna.c/Downloads/Training2020-amit/Training2020-amit/model-page-frontend/model-page/src/component/CityVersionBox.js"],"names":["React","PopUpDisplayBox","Component","constructor","props","OpenLocationPopUp","changeEntityFlag","state","selectedLocation","OpenVersionPopUp","selectedVersion","OpenModelPopUp","selectedModel","popupName","render","popups","map","popup","display","margin","versionName","modelName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../css/App.css';\n\nexport default class PopUpDisplayBox extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      popupName : ['Version','City', 'Model'],\n      selectedLocation : props.selectedLocation,\n      selectedModel : props.selectedModel,\n      selectedVersion : props.selectedVersion\n    }\n  }\n\n  OpenLocationPopUp = () => {\n    this.props.changeEntityFlag(true,this.state.selectedLocation,\"Location\");\n  }\n\n  OpenVersionPopUp = () => {\n    this.props.changeEntityFlag(true,this.state.selectedVersion,\"Version\");\n  }\n\n  OpenModelPopUp = () => {\n    this.props.changeEntityFlag(true,this.state.selectedModel,\"Model\");\n  }\n\n  render()\n  {\n    const popups = this.state.popupName.map(popup => {\n      if (popup === \"Version\") \n      {\n        return (\n          <div style= {{ display: \"inline-block\", margin: \"0 20px\" }}>\n            \n            <div className=\"version\">{popup}</div>\n            <button className=\"button\" key={popup} onClick={this.OpenVersionPopUp} > {this.state.selectedVersion.versionName}</button>\n\n          </div>\n\n        )\n      }\n      if (popup === \"City\")\n      {\n        return (\n        \n          <div style= {{ display: \"inline-block\", margin: \"0 20px\" }}>\n            \n            <div className=\"version\">{popup}</div>\n            <button className=\"button\" key={popup} onClick={this.OpenLocationPopUp} > {this.state.selectedLocation}</button>\n\n          </div>\n        )\n      }\n\n      else\n      {\n        return (\n        \n          <div style= {{ display: \"inline-block\", margin: \"0 20px\" }}>\n            \n            <div className=\"version\">{popup}</div>\n            <button className=\"button\" key={popup} onClick={this.OpenModelPopUp} > {this.state.selectedModel.modelName}</button>\n\n          </div>\n        )\n      }\n    })\n    return (\n      <div className=\"popUpContainer\">\n        {popups}\n      </div>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}