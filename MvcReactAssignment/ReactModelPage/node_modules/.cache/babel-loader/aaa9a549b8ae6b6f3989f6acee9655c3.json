{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\prerna.c\\\\Downloads\\\\Training2020-amit\\\\Training2020-amit\\\\model-page-frontend\\\\model-page\\\\src\\\\component\\\\App.js\";\nimport React from \"react\";\nimport '../css/App.css';\nimport { connect } from \"react-redux\";\nimport CarBasicInformation from './CarBasicInformation';\nimport CarImageAndInformation from './CarImageAndInformation';\nimport NavBar from './NavBar';\nimport PriceDetails from './PriceDetails';\nimport PopUpDisplayBox from './PopUpDisplayBox';\nimport CommonPopUp from './CommonPopUp';\nconst NavBarConnect = connect(mapStateToProps, mapDispatchToProps)(NavBar);\nconst PopUpDisplayBoxConnect = connect(mapStateToProps, mapDispatchToProps)(PopUpDisplayBox);\nconst CommonPopUpConnect = connect(mapStateToProps, mapDispatchToProps)(CommonPopUp);\n\nfunction updateCityNameAction(city) {\n  console.log(\"NEw city is : \", city);\n  return {\n    type: \"UPDATE_CITY\",\n    selectedLocation: city\n  };\n}\n\nfunction mapStateToProps(state) {\n  console.log(\"State is :\", state.selectedLocation, \" mil gaya!!!!\");\n  return { ...state,\n    selectedLocation: state.selectedLocation\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeCityName: function (selectedLocation) {\n      dispatch(updateCityNameAction(selectedLocation));\n    }\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeEntityFlag = (flag, entity, type) => {\n      if (type === \"Version\") {\n        let sel_ver = {};\n\n        for (let i = 0; i < this.state.versions.length; i++) {\n          if (this.state.versions[i].versionName === entity) {\n            sel_ver = this.state.versions[i];\n            break;\n          }\n        }\n\n        this.setState({ ...this.state,\n          selectedVersion: sel_ver,\n          locationPopUpVisible: false,\n          versionPopUpVisible: flag\n        });\n      } else {\n        this.setState({ ...this.state,\n          selectedLocation: entity,\n          locationPopUpVisible: flag,\n          versionPopUpVisible: false\n        });\n      }\n    };\n\n    this.state = {\n      dataRecieved: false,\n      locationPopUpVisible: false,\n      versionPopUpVisible: false,\n      versions: [],\n      locations: [],\n      selectedLocation: \"\",\n      selectedVersion: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/home/getcardetails?companyId=5&modelId=50\").then(res => res.json()).then(result => {\n      console.log(result);\n      fetch(\"http://localhost:5000/home/getlocations\").then(res1 => res1.json()).then(location => {\n        console.log(location);\n        this.setState({ ...this.state,\n          dataRecieved: true,\n          versions: result,\n          locations: location,\n          selectedLocation: location[0],\n          selectedVersion: result[0]\n        });\n      }, error_loc => {\n        console.log(\"Error occured in location fetch:\", error_loc);\n      });\n    }, error_ver => {\n      console.log(\"Error Occured in version fetch: \", error_ver);\n    });\n  }\n\n  render() {\n    if (this.state.dataRecieved) {\n      if (this.state.locationPopUpVisible) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CommonPopUpConnect, {\n            popUpType: \"Location\",\n            entityList: this.state.locations,\n            changeEntityFlag: this.changeEntityFlag,\n            selectedEntity: this.state.selectedLocation,\n            popUpVisible: this.state.locationPopUpVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.versionPopUpVisible) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CommonPopUpConnect, {\n            popUpType: \"Version\",\n            entityList: this.state.versions,\n            changeEntityFlag: this.changeEntityFlag,\n            selectedEntity: this.state.selectedVersion,\n            popUpVisible: this.state.versionPopUpVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Container\",\n          children: [/*#__PURE__*/_jsxDEV(NavBarConnect, {\n            selectedLocation: this.state.selectedLocation,\n            changeEntityFlag: this.changeEntityFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CarImageAndInformation, {\n            selectedVersion: this.state.selectedVersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CarBasicInformation, {\n            carNameRatingsReviews: this.state.selectedVersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PopUpDisplayBoxConnect, {\n            selectedLocation: this.state.selectedLocation,\n            selectedVersion: this.state.selectedVersion,\n            changeEntityFlag: this.changeEntityFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceDetails, {\n            selectedVersion: this.state.selectedVersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Data Not Recieved!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/prerna.c/Downloads/Training2020-amit/Training2020-amit/model-page-frontend/model-page/src/component/App.js"],"names":["React","connect","CarBasicInformation","CarImageAndInformation","NavBar","PriceDetails","PopUpDisplayBox","CommonPopUp","NavBarConnect","mapStateToProps","mapDispatchToProps","PopUpDisplayBoxConnect","CommonPopUpConnect","updateCityNameAction","city","console","log","type","selectedLocation","state","dispatch","changeCityName","App","Component","constructor","props","changeEntityFlag","flag","entity","sel_ver","i","versions","length","versionName","setState","selectedVersion","locationPopUpVisible","versionPopUpVisible","dataRecieved","locations","componentDidMount","fetch","then","res","json","result","res1","location","error_loc","error_ver","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../css/App.css';\nimport { connect } from \"react-redux\";\nimport CarBasicInformation from './CarBasicInformation'\nimport CarImageAndInformation from './CarImageAndInformation'\nimport NavBar from './NavBar'\nimport PriceDetails from './PriceDetails'\nimport PopUpDisplayBox from './PopUpDisplayBox'\nimport CommonPopUp from './CommonPopUp'\n\nconst NavBarConnect = connect(mapStateToProps,mapDispatchToProps)(NavBar);\nconst PopUpDisplayBoxConnect = connect(mapStateToProps,mapDispatchToProps)(PopUpDisplayBox);\nconst CommonPopUpConnect = connect(mapStateToProps,mapDispatchToProps)(CommonPopUp);\n\nfunction updateCityNameAction(city) {\n  console.log(\"NEw city is : \",city)\n  return {\n    type: \"UPDATE_CITY\",\n    selectedLocation: city\n  };\n}\n\nfunction mapStateToProps(state) {\n  console.log(\"State is :\",state.selectedLocation,\" mil gaya!!!!\");\n  return {\n    ...state,\n    selectedLocation: state.selectedLocation\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeCityName: function(selectedLocation) {\n      dispatch(updateCityNameAction(selectedLocation));\n    }\n  };\n}\n\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      dataRecieved : false,\n      locationPopUpVisible : false,\n      versionPopUpVisible : false,\n      versions : [],\n      locations : [],\n      selectedLocation : \"\",\n      selectedVersion : {}\n    }\n  }\n\n  componentDidMount()\n  {\n    fetch(\"http://localhost:5000/home/getcardetails?companyId=5&modelId=50\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          fetch(\"http://localhost:5000/home/getlocations\")\n            .then(res1 => res1.json())\n            .then(\n            (location) => {\n              console.log(location);\n              this.setState({\n                ...this.state,\n                dataRecieved : true,\n                versions : result,\n                locations : location,\n                selectedLocation : location[0],\n                selectedVersion : result[0]\n              });\n            },\n            (error_loc) => {\n              console.log(\"Error occured in location fetch:\",error_loc)\n            }\n          );\n        },\n        (error_ver) => {\n          console.log(\"Error Occured in version fetch: \",error_ver);\n        }\n      );\n  }\n\n  changeEntityFlag = (flag, entity, type) => {\n    if(type === \"Version\")\n    {\n      let sel_ver = {};\n      for (let i = 0; i < this.state.versions.length; i++) {\n        if(this.state.versions[i].versionName === entity)\n        {\n          sel_ver = this.state.versions[i];\n          break;\n        }\n      }\n      this.setState({\n        ...this.state,\n        selectedVersion : sel_ver,\n        locationPopUpVisible : false,\n        versionPopUpVisible : flag\n      });\n    }\n    else\n    {\n      this.setState({\n        ...this.state,\n        selectedLocation : entity,\n        locationPopUpVisible : flag,\n        versionPopUpVisible : false\n      });\n    }\n  }\n  \n  render()\n  {\n    if(this.state.dataRecieved)\n    {\n      if(this.state.locationPopUpVisible)\n      {\n        return(\n          <div><CommonPopUpConnect popUpType=\"Location\" entityList={this.state.locations} changeEntityFlag={this.changeEntityFlag} selectedEntity={this.state.selectedLocation} popUpVisible={this.state.locationPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else if(this.state.versionPopUpVisible)\n      {\n        return(\n          <div><CommonPopUpConnect popUpType=\"Version\" entityList={this.state.versions} changeEntityFlag={this.changeEntityFlag} selectedEntity={this.state.selectedVersion} popUpVisible={this.state.versionPopUpVisible}></CommonPopUpConnect></div>\n        );\n      }\n      else\n      {\n        return(\n          <div className=\"Container\">\n            <NavBarConnect selectedLocation={this.state.selectedLocation} changeEntityFlag={this.changeEntityFlag}></NavBarConnect>\n            <CarImageAndInformation selectedVersion={this.state.selectedVersion}></CarImageAndInformation>\n            <CarBasicInformation carNameRatingsReviews={this.state.selectedVersion}></CarBasicInformation>\n            <PopUpDisplayBoxConnect selectedLocation={this.state.selectedLocation} selectedVersion={this.state.selectedVersion} changeEntityFlag={this.changeEntityFlag}></PopUpDisplayBoxConnect>\n            <PriceDetails selectedVersion={this.state.selectedVersion}></PriceDetails>\n          </div>\n        );\n      }\n    }\n    else\n    {\n      return(\n        <div>Data Not Recieved!</div>\n      );\n    }\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}