{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactmvc\\\\MvcReactAssignment\\\\ReactModelPage\\\\src\\\\component\\\\CommonPopUp.js\";\nimport React from \"react\";\nimport '../App.css';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { mapDispatchToProps, mapStateToProps } from '../Actions/cityAction';\n\nclass CommonPopUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeEntityDetails = e => {\n      var entityName = e.target.innerHTML;\n\n      if (this.state.popUpType === \"Location\") {\n        this.props.changeCityName(entityName);\n      }\n\n      this.props.setCityVersion(false, entityName, this.state.popUpType, this.state.id);\n    };\n\n    this.state = {\n      popUpType: props.popUpType,\n      popUpVisible: true,\n      popupList: props.popupList,\n      id: this.props.id\n    };\n  }\n\n  render() {\n    const entities = this.state.popupList.map(entity => {\n      if (this.state.popUpVisible) {\n        if (this.state.popUpType === \"Version\") {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              whiteSpace: \"nowrap\"\n            },\n            onClick: this.changeEntityDetails,\n            children: entity.versionName\n          }, entity.versionId + \"_\" + entity.versionName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              whiteSpace: \"nowrap\"\n            },\n            onClick: this.changeEntityDetails,\n            children: entity\n          }, entity, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this);\n        }\n      } else {\n        return '';\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: entities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCommonPopUp.propTypes = {\n  popUpType: PropTypes.string,\n  setCityVersion: PropTypes.func,\n  popupList: PropTypes.shape({\n    CompanyId: PropTypes.number,\n    CompanyName: PropTypes.string,\n    ModelId: PropTypes.number,\n    ModelName: PropTypes.string,\n    Rating: PropTypes.number,\n    VersionId: PropTypes.number,\n    ImageUrl: PropTypes.string,\n    VersionName: PropTypes.string,\n    Price: PropTypes.number\n  }) || PropTypes.shape({\n    locations: PropTypes.string\n  }),\n  visibleItem: PropTypes.shape({\n    CompanyId: PropTypes.number,\n    CompanyName: PropTypes.string,\n    ModelId: PropTypes.number,\n    ModelName: PropTypes.string,\n    Rating: PropTypes.number,\n    VersionId: PropTypes.number,\n    ImageUrl: PropTypes.string,\n    VersionName: PropTypes.string,\n    Price: PropTypes.number\n  }) || PropTypes.shape({\n    locations: PropTypes.string\n  }),\n  popUpVisible: PropTypes.bool\n};\nexport default CommonPopUp;\nexport const CommonPopUpConnect = connect(mapStateToProps, mapDispatchToProps)(CommonPopUp);","map":{"version":3,"sources":["D:/reactmvc/MvcReactAssignment/ReactModelPage/src/component/CommonPopUp.js"],"names":["React","PropTypes","connect","mapDispatchToProps","mapStateToProps","CommonPopUp","Component","constructor","props","changeEntityDetails","e","entityName","target","innerHTML","state","popUpType","changeCityName","setCityVersion","id","popUpVisible","popupList","render","entities","map","entity","whiteSpace","versionName","versionId","propTypes","string","func","shape","CompanyId","number","CompanyName","ModelId","ModelName","Rating","VersionId","ImageUrl","VersionName","Price","locations","visibleItem","bool","CommonPopUpConnect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\n\nimport { mapDispatchToProps, mapStateToProps } from '../Actions/cityAction';\n\n\nclass CommonPopUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popUpType: props.popUpType,\n      popUpVisible: true,\n      popupList: props.popupList,\n      id: this.props.id\n    };\n  }\n\n  changeEntityDetails = (e) => {\n    var entityName = e.target.innerHTML\n    if (this.state.popUpType === \"Location\") {\n      this.props.changeCityName(entityName);\n    }\n    this.props.setCityVersion(false, entityName, this.state.popUpType, this.state.id);\n  }\n\n  render() {\n    const entities = this.state.popupList.map(entity => {\n      if (this.state.popUpVisible) {\n        if (this.state.popUpType === \"Version\") {\n          return (\n            <p style={{ whiteSpace: \"nowrap\" }} onClick={this.changeEntityDetails} key={entity.versionId + \"_\" + entity.versionName}>{entity.versionName}</p>\n          )\n        }\n        else {\n          return (\n            <p style={{ whiteSpace: \"nowrap\" }} onClick={this.changeEntityDetails} key={entity}>{entity}</p>\n          )\n        }\n      }\n      else {\n        return (\n          ''\n        )\n      }\n    });\n    return (\n      <div>\n        {entities}\n      </div>\n    );\n  }\n}\n\nCommonPopUp.propTypes = {\n  popUpType: PropTypes.string,\n  setCityVersion: PropTypes.func,\n  popupList: PropTypes.shape({\n    CompanyId: PropTypes.number,\n    CompanyName: PropTypes.string,\n    ModelId: PropTypes.number,\n    ModelName: PropTypes.string,\n    Rating: PropTypes.number,\n    VersionId: PropTypes.number,\n    ImageUrl: PropTypes.string,\n    VersionName: PropTypes.string,\n    Price: PropTypes.number\n  }) || PropTypes.shape({\n    locations: PropTypes.string\n  }),\n  visibleItem: PropTypes.shape({\n    CompanyId: PropTypes.number,\n    CompanyName: PropTypes.string,\n    ModelId: PropTypes.number,\n    ModelName: PropTypes.string,\n    Rating: PropTypes.number,\n    VersionId: PropTypes.number,\n    ImageUrl: PropTypes.string,\n    VersionName: PropTypes.string,\n    Price: PropTypes.number\n  }) || PropTypes.shape({\n    locations: PropTypes.string\n  }),\n  popUpVisible: PropTypes.bool\n\n}\n\n\n\nexport default CommonPopUp;\n\nexport const CommonPopUpConnect = connect(mapStateToProps, mapDispatchToProps)(CommonPopUp);"]},"metadata":{},"sourceType":"module"}