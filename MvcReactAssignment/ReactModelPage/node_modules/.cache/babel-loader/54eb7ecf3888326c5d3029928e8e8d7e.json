{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactmvc\\\\MvcReactAssignment\\\\ReactModelPage\\\\src\\\\component\\\\NavBar.js\";\nimport React from \"react\";\nimport '../App.css';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { mapDispatchToProps, mapStateToProps } from '../Actions/cityAction';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.OpenLocationPopUp = () => {\n      this.props.setCityVersion(true, this.state.selectedCity, \"Location\", this.state.id);\n    };\n\n    this.handleLocationClick = () => {\n      this.props.changeCityName(this.state.selectedCity);\n      this.OpenLocationPopUp();\n    };\n\n    this.displayTooltip = () => {\n      document.getElementsByClassName(\"tooltip\")[0].style.display = \"block\";\n      setTimeout(() => {\n        document.getElementsByClassName(\"tooltip\")[0].style.display = \"none\";\n      }, 2000);\n    };\n\n    this.state = {\n      selectedCity: props.selectedLocation,\n      id: props.id\n    };\n  }\n\n  render() {\n    const {\n      selectedLocation,\n      setCityVersion\n    } = this.props;\n\n    if (!selectedLocation || !setCityVersion) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Rectangle\",\n      \"test-data\": \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://imgd.aeplcdn.com/0x0/cw/static/icons/new-header/logo.svg\",\n        className: \"LogoImgShape\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./search.svg\",\n        className: \"SearchShape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.flaticon.com/svg/static/icons/svg/927/927667.svg\",\n        alt: \"tooltip\",\n        className: \"LocationShape\",\n        onMouseOver: this.displayTooltip,\n        onClick: this.handleLocationClick,\n        \"data-tip\": true,\n        \"data-for\": \"locationTip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        style: {\n          backgroundColor: \"gray\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltipText\",\n          children: [\"Current Location : \", this.state.selectedCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNavBar.propTypes = {\n  selectedLocation: PropTypes.string,\n  setCityVersion: PropTypes.func\n};\nexport default NavBar;\nexport const NavBarConnect = connect(mapStateToProps, mapDispatchToProps)(NavBar);","map":{"version":3,"sources":["D:/reactmvc/MvcReactAssignment/ReactModelPage/src/component/NavBar.js"],"names":["React","PropTypes","connect","mapDispatchToProps","mapStateToProps","NavBar","Component","constructor","props","OpenLocationPopUp","setCityVersion","state","selectedCity","id","handleLocationClick","changeCityName","displayTooltip","document","getElementsByClassName","style","display","setTimeout","selectedLocation","render","backgroundColor","propTypes","string","func","NavBarConnect"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,uBAApD;;AAIA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,iBARmB,GAQC,MAAM;AACxB,WAAKD,KAAL,CAAWE,cAAX,CAA0B,IAA1B,EAAgC,KAAKC,KAAL,CAAWC,YAA3C,EAAyD,UAAzD,EAAqE,KAAKD,KAAL,CAAWE,EAAhF;AACD,KAVkB;;AAAA,SAYnBC,mBAZmB,GAYG,MAAM;AAC1B,WAAKN,KAAL,CAAWO,cAAX,CAA0B,KAAKJ,KAAL,CAAWC,YAArC;AACA,WAAKH,iBAAL;AACD,KAfkB;;AAAA,SAiBnBO,cAjBmB,GAiBF,MAAM;AACrBC,MAAAA,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8CC,KAA9C,CAAoDC,OAApD,GAA8D,OAA9D;AACAC,MAAAA,UAAU,CAAC,MAAM;AACfJ,QAAAA,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8CC,KAA9C,CAAoDC,OAApD,GAA8D,MAA9D;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAtBkB;;AAEjB,SAAKT,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAEJ,KAAK,CAACc,gBADT;AAEXT,MAAAA,EAAE,EAAEL,KAAK,CAACK;AAFC,KAAb;AAID;;AAkBDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA,gBAAF;AAAoBZ,MAAAA;AAApB,QAAuC,KAAKF,KAAlD;;AAEA,QAAI,CAACc,gBAAD,IAAqB,CAACZ,cAA1B,EAA0C;AACxC,aAAO,IAAP;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,mBAAU,QAArC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAC,kEAAT;AAA4E,QAAA,SAAS,EAAC,cAAtF;AAAqG,QAAA,GAAG,EAAC;AAAzG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,GAAG,EAAC,8DAAT;AAAwE,QAAA,GAAG,EAAC,SAA5E;AAAsF,QAAA,SAAS,EAAC,eAAhG;AAAgH,QAAA,WAAW,EAAE,KAAKM,cAAlI;AAAkJ,QAAA,OAAO,EAAE,KAAKF,mBAAhK;AAAqL,wBAArL;AAA8L,oBAAS;AAAvM;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE;AAAEU,UAAAA,eAAe,EAAE;AAAnB,SAAhC;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,4CAA+C,KAAKb,KAAL,CAAWC,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAzCkC;;AA6CrCP,MAAM,CAACoB,SAAP,GAAmB;AACjBH,EAAAA,gBAAgB,EAAErB,SAAS,CAACyB,MADX;AAEjBhB,EAAAA,cAAc,EAAET,SAAS,CAAC0B;AAFT,CAAnB;AAMA,eAAetB,MAAf;AAEA,OAAO,MAAMuB,aAAa,GAAG1B,OAAO,CAACE,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CE,MAA7C,CAAtB","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\n\nimport { mapDispatchToProps, mapStateToProps } from '../Actions/cityAction';\n\n\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCity: props.selectedLocation,\n      id: props.id\n    };\n  }\n\n  OpenLocationPopUp = () => {\n    this.props.setCityVersion(true, this.state.selectedCity, \"Location\", this.state.id);\n  }\n\n  handleLocationClick = () => {\n    this.props.changeCityName(this.state.selectedCity);\n    this.OpenLocationPopUp();\n  }\n\n  displayTooltip = () => {\n    document.getElementsByClassName(\"tooltip\")[0].style.display = \"block\";\n    setTimeout(() => {\n      document.getElementsByClassName(\"tooltip\")[0].style.display = \"none\";\n    }, 2000);\n  }\n\n  render() {\n    const { selectedLocation, setCityVersion } = this.props;\n\n    if (!selectedLocation || !setCityVersion) {\n      return null;\n    }\n    return (\n      <div className=\"Rectangle\" test-data=\"navbar\">\n        <img src=\"https://imgd.aeplcdn.com/0x0/cw/static/icons/new-header/logo.svg\" className=\"LogoImgShape\" alt=\"logo\"></img>\n        <img src=\"./search.svg\" className=\"SearchShape\"></img>\n        <img src=\"https://www.flaticon.com/svg/static/icons/svg/927/927667.svg\" alt=\"tooltip\" className=\"LocationShape\" onMouseOver={this.displayTooltip} onClick={this.handleLocationClick} data-tip data-for=\"locationTip\"></img>\n        <div className=\"tooltip\" style={{ backgroundColor: \"gray\" }}>\n          <p className=\"tooltipText\">Current Location : {this.state.selectedCity}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nNavBar.propTypes = {\n  selectedLocation: PropTypes.string,\n  setCityVersion: PropTypes.func\n}\n\n\nexport default NavBar;\n\nexport const NavBarConnect = connect(mapStateToProps, mapDispatchToProps)(NavBar);"]},"metadata":{},"sourceType":"module"}