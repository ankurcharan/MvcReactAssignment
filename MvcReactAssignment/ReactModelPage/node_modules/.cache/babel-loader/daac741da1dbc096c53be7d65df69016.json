{"ast":null,"code":"import { types } from '../Actions/Types';\nimport { type } from 'os';\nconst initState = {\n  locationList: ['Mumbai', 'Pune', 'Navi Mumbai', 'Alwar', 'Goa', 'Chandigarh'],\n  selectedLocation: 'Alwar'\n};\nexport function RootReducer(state = initState, action) {\n  switch (action.type) {\n    case types.GET_POSTS:\n      {\n        const newState = { ...state,\n          selectedLocation: action.selectedLocation\n        };\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n}\n_c = RootReducer;\nexport default ((state = [], action) => {\n  switch (action.type) {\n    case types.GET_POSTS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"RootReducer\");","map":{"version":3,"sources":["C:/Users/prerna.c/Downloads/mvcreact-main (1)/mvcreact-main/MvcReactAssignment/ReactModelPage/src/reducer/RootReducer.js"],"names":["types","type","initState","locationList","selectedLocation","RootReducer","state","action","GET_POSTS","newState","payload"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,IAAT,QAAqB,IAArB;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,aAAnB,EAAkC,OAAlC,EAA2C,KAA3C,EAAkD,YAAlD,CADA;AAEdC,EAAAA,gBAAgB,EAAG;AAFL,CAAlB;AAKA,OAAO,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,SAA7B,EAAwCK,MAAxC,EACP;AACI,UAAOA,MAAM,CAACN,IAAd;AACI,SAAKD,KAAK,CAACQ,SAAX;AACI;AACI,cAAMC,QAAQ,GACd,EACI,GAAGH,KADP;AAEIF,UAAAA,gBAAgB,EAAGG,MAAM,CAACH;AAF9B,SADA;AAKA,eAAOK,QAAP;AACH;;AACL;AACI,aAAOH,KAAP;AAXR;AAaH;KAfeD,W;AAkBhB,gBAAe,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACjC,UAAOA,MAAM,CAACN,IAAd;AACI,SAAKD,KAAK,CAACQ,SAAX;AACI,aAAOD,MAAM,CAACG,OAAd;;AACJ;AACI,aAAOJ,KAAP;AAJR;AAMH,CAPD","sourcesContent":["import { types } from '../Actions/Types';\nimport { type } from 'os';\n\n\nconst initState = {\n    locationList: ['Mumbai', 'Pune', 'Navi Mumbai', 'Alwar', 'Goa', 'Chandigarh'],\n    selectedLocation : 'Alwar'\n}\n\nexport function RootReducer(state = initState, action) \n{\n    switch(action.type){\n        case types.GET_POSTS:\n            {\n                const newState = \n                {\n                    ...state,\n                    selectedLocation : action.selectedLocation\n                };\n                return newState;\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport default (state=[], action) => {\n    switch(action.type){\n        case types.GET_POSTS:\n            return action.payload;\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}