{"ast":null,"code":"export const changeEntityFlag = (flag, entity, type, id) => {\n  if (type === \"Version\") {\n    let sel_ver = {};\n\n    for (let i = 0; i < this.state.versions.length; i++) {\n      if (this.state.versions[i].versionName === entity) {\n        sel_ver = this.state.versions[i];\n        break;\n      }\n    }\n\n    this.setState({ ...this.state,\n      selectedVersion: sel_ver,\n      locationPopUpVisible: false,\n      versionPopUpVisible: flag,\n      id: 0\n    });\n  } else {\n    this.setState({ ...this.state,\n      selectedLocation: entity,\n      locationPopUpVisible: flag,\n      versionPopUpVisible: false,\n      id: 1\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/prerna.c/Downloads/mvcreact-main (1)/mvcreact-main/MvcReactAssignment/ReactModelPage/src/Actions/changeEntityFlag.js"],"names":["changeEntityFlag","flag","entity","type","id","sel_ver","i","state","versions","length","versionName","setState","selectedVersion","locationPopUpVisible","versionPopUpVisible","selectedLocation"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,EAAqBC,EAArB,KAA4B;AACxD,MAAID,IAAI,KAAK,SAAb,EAAwB;AACpB,QAAIE,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAxC,EAAgDH,CAAC,EAAjD,EAAqD;AACjD,UAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,CAApB,EAAuBI,WAAvB,KAAuCR,MAA3C,EAAmD;AAC/CG,QAAAA,OAAO,GAAG,KAAKE,KAAL,CAAWC,QAAX,CAAoBF,CAApB,CAAV;AACA;AACH;AACJ;;AACD,SAAKK,QAAL,CAAc,EACV,GAAG,KAAKJ,KADE;AAEVK,MAAAA,eAAe,EAAEP,OAFP;AAGVQ,MAAAA,oBAAoB,EAAE,KAHZ;AAIVC,MAAAA,mBAAmB,EAAEb,IAJX;AAKVG,MAAAA,EAAE,EAAE;AALM,KAAd;AAOH,GAfD,MAgBK;AACD,SAAKO,QAAL,CAAc,EACV,GAAG,KAAKJ,KADE;AAEVQ,MAAAA,gBAAgB,EAAEb,MAFR;AAGVW,MAAAA,oBAAoB,EAAEZ,IAHZ;AAIVa,MAAAA,mBAAmB,EAAE,KAJX;AAKVV,MAAAA,EAAE,EAAE;AALM,KAAd;AAOH;AACJ,CA1BM","sourcesContent":["export const changeEntityFlag = (flag, entity, type, id) => {\n    if (type === \"Version\") {\n        let sel_ver = {};\n        for (let i = 0; i < this.state.versions.length; i++) {\n            if (this.state.versions[i].versionName === entity) {\n                sel_ver = this.state.versions[i];\n                break;\n            }\n        }\n        this.setState({\n            ...this.state,\n            selectedVersion: sel_ver,\n            locationPopUpVisible: false,\n            versionPopUpVisible: flag,\n            id: 0\n        });\n    }\n    else {\n        this.setState({\n            ...this.state,\n            selectedLocation: entity,\n            locationPopUpVisible: flag,\n            versionPopUpVisible: false,\n            id: 1\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}