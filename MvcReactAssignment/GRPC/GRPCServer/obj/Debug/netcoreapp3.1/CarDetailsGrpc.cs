// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/carDetails.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GRPCServer {
  public static partial class carDetails
  {
    static readonly string __ServiceName = "details.carDetails";

    static readonly grpc::Marshaller<global::GRPCServer.carName> __Marshaller_details_carName = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.carName.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.modelData> __Marshaller_details_modelData = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.modelData.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.newcity> __Marshaller_details_newcity = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.newcity.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.citiesModel> __Marshaller_details_citiesModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.citiesModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.ListCities> __Marshaller_details_ListCities = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.ListCities.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.VersionId> __Marshaller_details_VersionId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.VersionId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.ListVersions> __Marshaller_details_ListVersions = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.ListVersions.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.compId> __Marshaller_details_compId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.compId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.ListModels> __Marshaller_details_ListModels = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.ListModels.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCServer.carName, global::GRPCServer.modelData> __Method_getDetails = new grpc::Method<global::GRPCServer.carName, global::GRPCServer.modelData>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getDetails",
        __Marshaller_details_carName,
        __Marshaller_details_modelData);

    static readonly grpc::Method<global::GRPCServer.newcity, global::GRPCServer.citiesModel> __Method_getCities = new grpc::Method<global::GRPCServer.newcity, global::GRPCServer.citiesModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getCities",
        __Marshaller_details_newcity,
        __Marshaller_details_citiesModel);

    static readonly grpc::Method<global::GRPCServer.newcity, global::GRPCServer.ListCities> __Method_getCitiesList = new grpc::Method<global::GRPCServer.newcity, global::GRPCServer.ListCities>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getCitiesList",
        __Marshaller_details_newcity,
        __Marshaller_details_ListCities);

    static readonly grpc::Method<global::GRPCServer.VersionId, global::GRPCServer.ListVersions> __Method_getVersionsList = new grpc::Method<global::GRPCServer.VersionId, global::GRPCServer.ListVersions>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getVersionsList",
        __Marshaller_details_VersionId,
        __Marshaller_details_ListVersions);

    static readonly grpc::Method<global::GRPCServer.compId, global::GRPCServer.ListModels> __Method_getModelsList = new grpc::Method<global::GRPCServer.compId, global::GRPCServer.ListModels>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getModelsList",
        __Marshaller_details_compId,
        __Marshaller_details_ListModels);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCServer.CarDetailsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of carDetails</summary>
    [grpc::BindServiceMethod(typeof(carDetails), "BindService")]
    public abstract partial class carDetailsBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GRPCServer.modelData> getDetails(global::GRPCServer.carName request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCServer.citiesModel> getCities(global::GRPCServer.newcity request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCServer.ListCities> getCitiesList(global::GRPCServer.newcity request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCServer.ListVersions> getVersionsList(global::GRPCServer.VersionId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GRPCServer.ListModels> getModelsList(global::GRPCServer.compId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(carDetailsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_getDetails, serviceImpl.getDetails)
          .AddMethod(__Method_getCities, serviceImpl.getCities)
          .AddMethod(__Method_getCitiesList, serviceImpl.getCitiesList)
          .AddMethod(__Method_getVersionsList, serviceImpl.getVersionsList)
          .AddMethod(__Method_getModelsList, serviceImpl.getModelsList).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, carDetailsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_getDetails, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GRPCServer.carName, global::GRPCServer.modelData>(serviceImpl.getDetails));
      serviceBinder.AddMethod(__Method_getCities, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GRPCServer.newcity, global::GRPCServer.citiesModel>(serviceImpl.getCities));
      serviceBinder.AddMethod(__Method_getCitiesList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GRPCServer.newcity, global::GRPCServer.ListCities>(serviceImpl.getCitiesList));
      serviceBinder.AddMethod(__Method_getVersionsList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GRPCServer.VersionId, global::GRPCServer.ListVersions>(serviceImpl.getVersionsList));
      serviceBinder.AddMethod(__Method_getModelsList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GRPCServer.compId, global::GRPCServer.ListModels>(serviceImpl.getModelsList));
    }

  }
}
#endregion
